name: Node.js CI

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    runs-on: ubuntu-latest   
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies, run tests & build
      run: |
        npm ci
        npm test
    env:
      CI: true
      
      
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        npm ci

    - name: Cache node_modules
      uses: actions/cache@v2.1.1
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
  
    - name: Build
      run: npm run build --if-present
    - name: Archive production build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Build files
        path: | 
          build


  deployment:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
    - name: deploy
      uses: appleboy/scp-action@master
      if: github.ref == 'refs/heads/development'
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_USER_PASS }}
        source: "build/*"
        target: "/var/www/dev"

#    - uses: actions/scp-action@master
#      if: github.ref == 'refs/heads/main'
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.SSH_USER }}
#        password: ${{ secrets.SSH_USER_PASS }}
#        source: "build/*"
#        target: /var/www/prod
#
#      uses: 
#      - name: Deploy production
#        if: github.ref == 'refs/heads/main'
#        run: |
#          cd build/
#          sshpass -V
#          export SSHPASS=${{ secrets.SSH_USER_PASS }}
#          sshpass -e scp -o stricthostkeychecking=no -r * hackerman@95.217.186.152:/var/www/prod
#
#      - name: Deploy dev
#        if: github.ref == 'refs/heads/development'
#        run: |
#          cd build/
#          sshpass -V
#          export SSHPASS=${{ secrets.SSH_USER_PASS }}
#          sshpass -e scp -o stricthostkeychecking=no -r * hackerman@95.217.186.152:/var/www/dev
